
services:

  frontend:
    build: ../frontend
    ports:
      - "5173:5173"
    volumes:
      - ../frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: sh -c "npm install && npm run dev"


  auth-service:
    build: ../backend/auth-service
    ports:
      - "5001:5001"
    env_file:
      - ../backend/auth-service/.env
    depends_on:
      - auth-db
  auth-db:
    image: postgres:16
    ports:
      - "5434:5432"
    environment:
      POSTGRES_DB: authdb
      POSTGRES_USER: authuser
      POSTGRES_PASSWORD: secret
    volumes:
      - ../backend/auth-service/init/01-schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ../backend/auth-service/init/02-seed.sql:/docker-entrypoint-initdb.d/02-seed.sql


  institution-service:
    build: ../backend/institution-service
    ports:
      - "5003:5003"
    env_file:
      - ../backend/institution-service/.env
    depends_on:
      - institution-db
  institution-db:
    image: postgres:16
    ports:
      - "5438:5432"
    environment:
      POSTGRES_DB: institutiondb
      POSTGRES_USER: institutionuser
      POSTGRES_PASSWORD: secret
    volumes:
      - ../backend/institution-service/init/01-schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ../backend/institution-service/init/02-seed.sql:/docker-entrypoint-initdb.d/02-seed.sql
    restart: always

  
  grades-service:
    build: ../backend/grades-service
    ports:
      - "5004:5004"
    env_file:
      - ../backend/grades-service/.env
    depends_on:
      - grades-db
  grades-db:
    image: postgres:16
    ports:
      - "5436:5432"
    environment:
      POSTGRES_DB: gradedb
      POSTGRES_USER: gradeuser
      POSTGRES_PASSWORD: secret
    volumes:
      - ../backend/grades-service/init/01-schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ../backend/grades-service/init/02-seed.sql:/docker-entrypoint-initdb.d/02-seed.sql


  review-service:
    build: ../backend/review-service
    ports:
      - "5006:5006"
    env_file:
      - ../backend/review-service/.env
    depends_on:
      - review-db
  review-db:
    image: postgres:16
    ports:
      - "5441:5432"
    environment:
      POSTGRES_DB: reviewdb
      POSTGRES_USER: reviewuser
      POSTGRES_PASSWORD: secret
    volumes:
      - ../backend/review-service/init/01-schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ../backend/review-service/init/02-seed.sql:/docker-entrypoint-initdb.d/02-seed.sql
    restart: always


  credits-service:
    build: ../backend/credits-service
    ports:
      - "5008:5008"
    env_file:
      - ../backend/credits-service/.env
    depends_on:
      - credits-db
  credits-db:
    image: postgres:16
    ports:
      - "5440:5432"
    environment:
      POSTGRES_DB: creditsdb
      POSTGRES_USER: creditsuser
      POSTGRES_PASSWORD: secret
    volumes:
      - ../backend/credits-service/init/01-schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ../backend/credits-service/init/02-seed.sql:/docker-entrypoint-initdb.d/02-seed.sql
    restart: always


  orchestrator-service:
    build: ../backend/orchestrator-service
    ports:
      - "5010:5010"
    env_file:
      - ../backend/orchestrator-service/.env
    depends_on:
      - auth-service
      - institution-service
      - grades-service
      - review-service
      - credits-service
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"       # AMQP port
      - "15672:15672"     # Web UI port
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    restart: always

      
volumes:
  postgres_data:
